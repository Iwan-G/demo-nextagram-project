[{"C:\\Users\\Iwan\\react-nextagram\\src\\index.js":"1","C:\\Users\\Iwan\\react-nextagram\\src\\App.js":"2","C:\\Users\\Iwan\\react-nextagram\\src\\reportWebVitals.js":"3","C:\\Users\\Iwan\\react-nextagram\\src\\pages\\HomePage.js":"4","C:\\Users\\Iwan\\react-nextagram\\src\\pages\\UserProfilePage.js":"5","C:\\Users\\Iwan\\react-nextagram\\src\\containers\\UserImages.js":"6","C:\\Users\\Iwan\\react-nextagram\\src\\components\\LoadingIndicator.js":"7","C:\\Users\\Iwan\\react-nextagram\\src\\components\\Navbar.js":"8","C:\\Users\\Iwan\\react-nextagram\\src\\components\\LoginForm.js":"9","C:\\Users\\Iwan\\react-nextagram\\src\\components\\SignupForm.js":"10","C:\\Users\\Iwan\\react-nextagram\\src\\components\\AuthModal.js":"11","C:\\Users\\Iwan\\react-nextagram\\src\\pages\\MyProfilePage.js":"12","C:\\Users\\Iwan\\react-nextagram\\src\\components\\SignUpForm.js":"13","C:\\Users\\Iwan\\react-nextagram\\src\\pages\\UploadPage.js":"14"},{"size":638,"mtime":1607855898133,"results":"15","hashOfConfig":"16"},{"size":1883,"mtime":1607681263621,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":1566,"mtime":1607681261701,"results":"19","hashOfConfig":"16"},{"size":1099,"mtime":1607761870724,"results":"20","hashOfConfig":"16"},{"size":1496,"mtime":1607672418781,"results":"21","hashOfConfig":"16"},{"size":245,"mtime":1607064722954,"results":"22","hashOfConfig":"16"},{"size":2522,"mtime":1607855898979,"results":"23","hashOfConfig":"16"},{"size":2387,"mtime":1607677692695,"results":"24","hashOfConfig":"16"},{"size":6194,"mtime":1607588026352,"results":"25","hashOfConfig":"26"},{"size":674,"mtime":1607588053228,"results":"27","hashOfConfig":"16"},{"size":1193,"mtime":1607677690814,"results":"28","hashOfConfig":"16"},{"size":6196,"mtime":1607672417929,"results":"29","hashOfConfig":"16"},{"size":2133,"mtime":1607677689003,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1n2iq4b",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wpvv03",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"C:\\Users\\Iwan\\react-nextagram\\src\\index.js",[],["61","62"],"C:\\Users\\Iwan\\react-nextagram\\src\\App.js",[],"C:\\Users\\Iwan\\react-nextagram\\src\\reportWebVitals.js",[],"C:\\Users\\Iwan\\react-nextagram\\src\\pages\\HomePage.js",[],"C:\\Users\\Iwan\\react-nextagram\\src\\pages\\UserProfilePage.js",[],"C:\\Users\\Iwan\\react-nextagram\\src\\containers\\UserImages.js",[],"C:\\Users\\Iwan\\react-nextagram\\src\\components\\LoadingIndicator.js",[],"C:\\Users\\Iwan\\react-nextagram\\src\\components\\Navbar.js",[],"C:\\Users\\Iwan\\react-nextagram\\src\\components\\LoginForm.js",[],"C:\\Users\\Iwan\\react-nextagram\\src\\components\\SignupForm.js",["63"],"C:\\Users\\Iwan\\react-nextagram\\src\\components\\AuthModal.js",[],"C:\\Users\\Iwan\\react-nextagram\\src\\pages\\MyProfilePage.js",[],"C:\\Users\\Iwan\\react-nextagram\\src\\components\\SignUpForm.js",["64"],"/* eslint-disable no-undef */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { ModalHeader, ModalBody, ModalFooter, Button, Form, FormGroup, Label, Input, FormFeedback, FormText } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst SignUpForm = ({ toggleIsLogin, toggle }) => {\r\n  const history = useHistory()\r\n  const [delay, setDelay] = useState(null);\r\n  const [usernameValid, setUsernameValid] = useState(true);\r\n  const [passwordValid, setPasswordValid] = useState(true)\r\n  const [confirmPassword, setConfirmPassword] =useState(\"\")\r\n  const [username, setUsername] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  \r\n  const checkUsername = newUsername => {\r\n    // this should only trigger after you stop typing for 500ms\r\n    console.log(\"Making API call to check username!\");\r\n    axios\r\n      .get(\r\n        `https://insta.nextacademy.com/api/v1/users/check_name?username=${newUsername}`\r\n      )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        if (response.data.valid) {\r\n          setUsernameValid(true);\r\n        } else {\r\n          setUsernameValid(false);\r\n        }\r\n      });\r\n  };\r\n  const handleInput = e => {\r\n    if(e.target.name ===\"username\"){\r\n      // clears queue so that the old keystrokes don't trigger axios call\r\n      clearTimeout(delay);\r\n      const newUsername = e.target.value;\r\n      setUsername(newUsername);\r\n\r\n      // put each new keystroke into the queue\r\n      const newDelay = setTimeout(() => {\r\n        checkUsername(newUsername);\r\n      }, 500);\r\n\r\n      setDelay(newDelay);\r\n    }\r\n    if(e.target.name===\"email\"){\r\n      setEmail(e.target.value)\r\n    }\r\n    if(e.target.name ===\"password\"){\r\n      setPassword(e.target.value)\r\n    }\r\n    if(e.target.name === \"confirmPassword\"){\r\n      setConfirmPassword(e.target.value)\r\n    }\r\n    \r\n  };\r\n  const getInputProp = () => {\r\n    if (!username.length) {\r\n      return null;\r\n    }\r\n\r\n    if (username.length <= 6) {\r\n      return { invalid: true };\r\n    }\r\n\r\n    if (usernameValid) {\r\n      return { valid: true };\r\n    } else {\r\n      return { invalid: true };\r\n    }\r\n  };\r\n\r\n  const getFormFeedback = () => {\r\n    if (!username.length) {\r\n      return null;\r\n    }\r\n\r\n    if (username.length <= 6) {\r\n      return <FormFeedback invalid>Must be at least 6 characters</FormFeedback>;\r\n    }\r\n\r\n    if (usernameValid) {\r\n      return <FormFeedback valid>Sweet! That name is available</FormFeedback>;\r\n    } else {\r\n      return <FormFeedback invalid>Sorry! Username is taken</FormFeedback>;\r\n    }\r\n  };\r\n  const getPwInputProps =() =>{\r\n    if(confirmPassword.length === 0){\r\n      return null\r\n    }\r\n    if(password === confirmPassword){\r\n      return {valid:true}\r\n    }else {\r\n      return {invalid:true}\r\n    }\r\n  }\r\n  const checkPassword = () =>{\r\n    if(!confirmPassword.length){\r\n      return null\r\n    }\r\n    if(password === confirmPassword){\r\n      return <FormText valid>Passwords match!</FormText>\r\n    } else {\r\n      return <FormText invalid>Passwords do not match</FormText>\r\n    }\r\n  }\r\n  useEffect( () =>{\r\n    if(password === confirmPassword){\r\n      setPasswordValid(true)\r\n    } else {\r\n      setPasswordValid(false)\r\n    }\r\n  },[confirmPassword])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    axios({\r\n      method: 'POST',\r\n      url: 'https://insta.nextacademy.com/api/v1/users/',\r\n      data: {\r\n        username: username,\r\n        email: email,\r\n        password: password\r\n      }\r\n    })\r\n    .then(response => {\r\n      console.log(response)\r\n      toggle()\r\n  \r\n        toast(response.data.message, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        });\r\n        setLoggedIn(true)\r\n        localStorage.setItem('jwt', response.data.auth_token)\r\n        history.push(\"/profile\")\r\n    })\r\n    .catch(error => {\r\n      console.error(error.response) // so that we know what went wrong if the request failed\r\n    })\r\n  }\r\n  const checkFormValid = () =>{\r\n    return !(username && email && passwordValid)\r\n  }\r\n  return <>\r\n    <Form>\r\n      <ModalHeader toggle={toggle}>Sign Up</ModalHeader>\r\n      <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"username\">Username</Label>\r\n            <Input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              value={username} \r\n              onChange={handleInput}\r\n              {...getInputProp()}\r\n            />\r\n            {getFormFeedback()}\r\n            <FormText>Enter a username between 6 and 20 characters</FormText> \r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"email\">Email</Label>\r\n            <Input \r\n              type=\"email\" \r\n              name=\"email\" \r\n              value={email} \r\n              onChange={handleInput} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"password\">Password</Label>\r\n            <Input \r\n              type=\"password\" \r\n              name=\"password\" \r\n              value={password} \r\n              onChange={handleInput} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"password\">Confirm Password</Label>\r\n            <Input \r\n              type=\"password\" \r\n              name=\"confirmPassword\" \r\n              value={confirmPassword} \r\n              onChange={handleInput} \r\n              {...getPwInputProps()}/>\r\n              {checkPassword()}\r\n          </FormGroup>\r\n          <p>Already a member? <a href=\"#\" onClick ={(e) =>{\r\n            e.preventDefault()\r\n            toggleIsLogin()\r\n          }}>Log in here</a></p>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button \r\n          color=\"primary\" \r\n          disabled={checkFormValid()} \r\n          onClick={handleSubmit}>Sign Up</Button>{' '}\r\n        <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n      </ModalFooter>\r\n    </Form>\r\n  </>\r\n}\r\n\r\nexport default SignUpForm","C:\\Users\\Iwan\\react-nextagram\\src\\pages\\UploadPage.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":117,"column":5,"nodeType":"71","endLine":117,"endColumn":22,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"70","line":117,"column":5,"nodeType":"71","endLine":117,"endColumn":22,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'password'. Either include it or remove the dependency array.","ArrayExpression",["76"],["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"78","fix":"80"},"Update the dependencies array to be: [confirmPassword, password]",{"range":"81","text":"82"},{"range":"83","text":"82"},[3379,3396],"[confirmPassword, password]",[3379,3396]]